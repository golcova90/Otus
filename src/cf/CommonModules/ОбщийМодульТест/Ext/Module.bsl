
Процедура РегламентноеЗаданиеТест() Экспорт
	
	ЗаписьЖурналаРегистрации("РеглЗадание.Предопределенное", УровеньЖурналаРегистрации.Информация);
	
	Сообщить("Задание предопределенное");
	
	
КонецПроцедуры

Процедура РегламентноеЗаданиеНепредопределенное() Экспорт
	
	ЗаписьЖурналаРегистрации("РеглЗадание.НеПредопределенное", УровеньЖурналаРегистрации.Информация);
	Сообщить("Задание непредопределенное");
КонецПроцедуры



Процедура РаботаСXDTO()
	
	ГлобальнаяФабрикаXDTO = ФабрикаXDTO;
	// Создать значение XDTO из ссылки
	СсылкаНаЭлементСправочника = Справочники.Номенклатура.НайтиПоКоду("0000001");
	ТипЗначенияXDTOСоздаваемогоЗначения = ГлобальнаяФабрикаXDTO.Тип("urn:schemas v8 1c ru:config data", "CatalogRef.Номенклатура");
	НовоеЗначениеXDTO = ГлобальнаяФабрикаXDTO.Создать(ТипЗначенияXDTOСоздаваемогоЗначения, СсылкаНаЭлементСправочника);
	// Создать значение XDTO из лексического представления значения
	ТипЗначенияXDTOСоздаваемогоЗначения = ГлобальнаяФабрикаXDTO.Тип("http://www.w3.org/2001/XMLSchema", "dateTime");
	НовоеЗначениеXDTO = ГлобальнаяФабрикаXDTO.Создать(ТипЗначенияXDTOСоздаваемогоЗначения, "2006-04-20T12:00:30");
	
	ТипПакет1 = ФабрикаXDTO.Тип("http://www.sample-package.org", "ПакетXDTO1");
	ОбъектПакет = ФабрикаXDTO.Создать(ТипПакет1);
	

	
	
КонецПроцедуры

